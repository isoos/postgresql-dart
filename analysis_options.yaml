# This file allows you to configure the Dart analyzer.
#
# The commented part below is just for inspiration. Read the guide here:
# https://github.com/dart-lang/sdk/tree/master/pkg/analyzer#configuring-the-analyzer

include: package:lints/recommended.yaml

analyzer:
  errors:
    unused_element: error
    unused_import: error
    unused_local_variable: error
    dead_code: error

linter:
  rules:
    # see catalogue here: http://dart-lang.github.io/linter/lints/
  - annotate_overrides
  - avoid_dynamic_calls
  - avoid_unused_constructor_parameters
  - await_only_futures
  - camel_case_types
  - cancel_subscriptions
  - directives_ordering
#  - empty_catches
  - empty_statements
  - hash_and_equals
  - collection_methods_unrelated_type
  - no_adjacent_strings_in_list
  - no_default_cases
  - no_duplicate_case_values
  - non_constant_identifier_names
  - noop_primitive_operations
  - only_throw_errors
  - overridden_fields
  - prefer_collection_literals
  - prefer_conditional_assignment
  - prefer_contains
  - prefer_final_fields
  - prefer_final_in_for_each
  - prefer_final_locals
  - prefer_initializing_formals
  - prefer_interpolation_to_compose_strings
  - prefer_is_empty
  - prefer_is_not_empty
  - prefer_single_quotes
  - prefer_typing_uninitialized_variables
  - recursive_getters
  - slash_for_doc_comments
  - test_types_in_equals
  - throw_in_finally
  - type_init_formals
  - unawaited_futures
  - unnecessary_brace_in_string_interps
  - unnecessary_getters_setters
  - unnecessary_lambdas
  - unnecessary_new
  - unnecessary_null_aware_assignments
  - unnecessary_null_checks
  - unnecessary_parenthesis
  - unnecessary_raw_strings
  - unnecessary_statements
  - unnecessary_this
  - unrelated_type_equality_checks
  - use_raw_strings
  - use_rethrow_when_possible
  - use_super_parameters
  - valid_regexps
